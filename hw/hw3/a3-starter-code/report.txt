# Zachary McNulty


2) UNIFORM COST SEARCH

=============================
# Puzzle A. (should be very fast)
python3 UCS.py EightPuzzle '[[3,0,1],[6,4,2],[7,8,5]]'

Welcome to UCS
Initial State:

[[3, 0, 1]
 [6, 4, 2]
 [7, 8, 5]]
You've got all eight straight. Great!
Solution path: 

[[3, 0, 1]
 [6, 4, 2]
 [7, 8, 5]]

[[3, 1, 0]
 [6, 4, 2]
 [7, 8, 5]]

[[3, 1, 2]
 [6, 4, 0]
 [7, 8, 5]]

[[3, 1, 2]
 [6, 4, 5]
 [7, 8, 0]]

[[3, 1, 2]
 [6, 4, 5]
 [7, 0, 8]]

[[3, 1, 2]
 [6, 4, 5]
 [0, 7, 8]]

[[3, 1, 2]
 [0, 4, 5]
 [6, 7, 8]]

[[0, 1, 2]
 [3, 4, 5]
 [6, 7, 8]]
Length of solution path found: 7 edges
Total cost of solution path found: 7.0
166 states expanded.
MAX_OPEN_LENGTH = 101




=============================================
# Puzzle B. (should not take long)
python3 UCS.py EightPuzzle '[[3,1,2],[6,8,7],[5,4,0]]'

Welcome to UCS
Initial State:

[[3, 1, 2]
 [6, 8, 7]
 [5, 4, 0]]
You've got all eight straight. Great!
Solution path: 

[[3, 1, 2]
 [6, 8, 7]
 [5, 4, 0]]

[[3, 1, 2]
 [6, 8, 0]
 [5, 4, 7]]

[[3, 1, 2]
 [6, 0, 8]
 [5, 4, 7]]

[[3, 1, 2]
 [6, 4, 8]
 [5, 0, 7]]

[[3, 1, 2]
 [6, 4, 8]
 [0, 5, 7]]

[[3, 1, 2]
 [0, 4, 8]
 [6, 5, 7]]

[[3, 1, 2]
 [4, 0, 8]
 [6, 5, 7]]

[[3, 1, 2]
 [4, 5, 8]
 [6, 0, 7]]

[[3, 1, 2]
 [4, 5, 8]
 [6, 7, 0]]

[[3, 1, 2]
 [4, 5, 0]
 [6, 7, 8]]

[[3, 1, 2]
 [4, 0, 5]
 [6, 7, 8]]

[[3, 1, 2]
 [0, 4, 5]
 [6, 7, 8]]

[[0, 1, 2]
 [3, 4, 5]
 [6, 7, 8]]
Length of solution path found: 12 edges
Total cost of solution path found: 12.0
1490 states expanded.
MAX_OPEN_LENGTH = 898

============================================
# Puzzle C. (May take a few minutes)
python3 UCS.py EightPuzzle '[[4,5,0],[1,2,8],[3,7,6]]'


Welcome to UCS
Initial State:

[[4, 5, 0]
 [1, 2, 8]
 [3, 7, 6]]
You've got all eight straight. Great!
Solution path: 

[[4, 5, 0]
 [1, 2, 8]
 [3, 7, 6]]

[[4, 0, 5]
 [1, 2, 8]
 [3, 7, 6]]

[[4, 2, 5]
 [1, 0, 8]
 [3, 7, 6]]

[[4, 2, 5]
 [1, 7, 8]
 [3, 0, 6]]

[[4, 2, 5]
 [1, 7, 8]
 [3, 6, 0]]

[[4, 2, 5]
 [1, 7, 0]
 [3, 6, 8]]

[[4, 2, 0]
 [1, 7, 5]
 [3, 6, 8]]

[[4, 0, 2]
 [1, 7, 5]
 [3, 6, 8]]

[[0, 4, 2]
 [1, 7, 5]
 [3, 6, 8]]

[[1, 4, 2]
 [0, 7, 5]
 [3, 6, 8]]

[[1, 4, 2]
 [3, 7, 5]
 [0, 6, 8]]

[[1, 4, 2]
 [3, 7, 5]
 [6, 0, 8]]

[[1, 4, 2]
 [3, 0, 5]
 [6, 7, 8]]

[[1, 0, 2]
 [3, 4, 5]
 [6, 7, 8]]

[[0, 1, 2]
 [3, 4, 5]
 [6, 7, 8]]
Length of solution path found: 14 edges
Total cost of solution path found: 14.0
4070 states expanded.
MAX_OPEN_LENGTH = 2290




==========================================
# Puzzle D. (May take several minutes)
python3 UCS.py EightPuzzle '[[0,8,2],[1,7,4],[3,6,5]]'

Welcome to UCS
Initial State:

[[0, 8, 2]
 [1, 7, 4]
 [3, 6, 5]]
You've got all eight straight. Great!
Solution path: 

[[0, 8, 2]
 [1, 7, 4]
 [3, 6, 5]]

[[1, 8, 2]
 [0, 7, 4]
 [3, 6, 5]]

[[1, 8, 2]
 [3, 7, 4]
 [0, 6, 5]]

[[1, 8, 2]
 [3, 7, 4]
 [6, 0, 5]]

[[1, 8, 2]
 [3, 0, 4]
 [6, 7, 5]]

[[1, 0, 2]
 [3, 8, 4]
 [6, 7, 5]]

[[0, 1, 2]
 [3, 8, 4]
 [6, 7, 5]]

[[3, 1, 2]
 [0, 8, 4]
 [6, 7, 5]]

[[3, 1, 2]
 [6, 8, 4]
 [0, 7, 5]]

[[3, 1, 2]
 [6, 8, 4]
 [7, 0, 5]]

[[3, 1, 2]
 [6, 0, 4]
 [7, 8, 5]]

[[3, 1, 2]
 [6, 4, 0]
 [7, 8, 5]]

[[3, 1, 2]
 [6, 4, 5]
 [7, 8, 0]]

[[3, 1, 2]
 [6, 4, 5]
 [7, 0, 8]]

[[3, 1, 2]
 [6, 4, 5]
 [0, 7, 8]]

[[3, 1, 2]
 [0, 4, 5]
 [6, 7, 8]]

[[0, 1, 2]
 [3, 4, 5]
 [6, 7, 8]]
Length of solution path found: 16 edges
Total cost of solution path found: 16.0
7982 states expanded.
MAX_OPEN_LENGTH = 4700
=======================================



4) 

A* With Hamming
=================================

# Puzzle A. (should be very fast)
python3 UCS.py EightPuzzle '[[3,0,1],[6,4,2],[7,8,5]]'

Welcome to A* Search!
Initial State:

[[3, 0, 1]
 [6, 4, 2]
 [7, 8, 5]]
You've got all eight straight. Great!
Solution path:

[[3, 0, 1]
 [6, 4, 2]
 [7, 8, 5]]

[[3, 1, 0]
 [6, 4, 2]
 [7, 8, 5]]

[[3, 1, 2]
 [6, 4, 0]
 [7, 8, 5]]

[[3, 1, 2]
 [6, 4, 5]
 [7, 8, 0]]

[[3, 1, 2]
 [6, 4, 5]
 [7, 0, 8]]

[[3, 1, 2]
 [6, 4, 5]
 [0, 7, 8]]

[[3, 1, 2]
 [0, 4, 5]
 [6, 7, 8]]

[[0, 1, 2]
 [3, 4, 5]
 [6, 7, 8]]
Length of solution path found: 7 edges
Total cost of solution path found: 7.0
7 states expanded.
MAX_OPEN_LENGTH = 6

============= Problem B
Welcome to A* Search!
Initial State:

[[3, 1, 2]
 [6, 8, 7]
 [5, 4, 0]]
You've got all eight straight. Great!
Solution path:

[[3, 1, 2]
 [6, 8, 7]
 [5, 4, 0]]

[[3, 1, 2]
 [6, 8, 0]
 [5, 4, 7]]

[[3, 1, 2]
 [6, 0, 8]
 [5, 4, 7]]

[[3, 1, 2]
 [6, 4, 8]
 [5, 0, 7]]

[[3, 1, 2]
 [6, 4, 8]
 [0, 5, 7]]

[[3, 1, 2]
 [0, 4, 8]
 [6, 5, 7]]

[[3, 1, 2]
 [4, 0, 8]
 [6, 5, 7]]

[[3, 1, 2]
 [4, 5, 8]
 [6, 0, 7]]

[[3, 1, 2]
 [4, 5, 8]
 [6, 7, 0]]

[[3, 1, 2]
 [4, 5, 0]
 [6, 7, 8]]

[[3, 1, 2]
 [4, 0, 5]
 [6, 7, 8]]

[[3, 1, 2]
 [0, 4, 5]
 [6, 7, 8]]

[[0, 1, 2]
 [3, 4, 5]
 [6, 7, 8]]
Length of solution path found: 12 edges
Total cost of solution path found: 12.0
94 states expanded.
MAX_OPEN_LENGTH = 72



=======================Problem C

Welcome to A* Search!
Initial State:

[[4, 5, 0]
 [1, 2, 8]
 [3, 7, 6]]
You've got all eight straight. Great!
Solution path: 

[[4, 5, 0]
 [1, 2, 8]
 [3, 7, 6]]

[[4, 0, 5]
 [1, 2, 8]
 [3, 7, 6]]

[[4, 2, 5]
 [1, 0, 8]
 [3, 7, 6]]

[[4, 2, 5]
 [1, 7, 8]
 [3, 0, 6]]

[[4, 2, 5]
 [1, 7, 8]
 [3, 6, 0]]

[[4, 2, 5]
 [1, 7, 0]
 [3, 6, 8]]

[[4, 2, 0]
 [1, 7, 5]
 [3, 6, 8]]

[[4, 0, 2]
 [1, 7, 5]
 [3, 6, 8]]

[[0, 4, 2]
 [1, 7, 5]
 [3, 6, 8]]

[[1, 4, 2]
 [0, 7, 5]
 [3, 6, 8]]

[[1, 4, 2]
 [3, 7, 5]
 [0, 6, 8]]

[[1, 4, 2]
 [3, 7, 5]
 [6, 0, 8]]

[[1, 4, 2]
 [3, 0, 5]
 [6, 7, 8]]

[[1, 0, 2]
 [3, 4, 5]
 [6, 7, 8]]

[[0, 1, 2]
 [3, 4, 5]
 [6, 7, 8]]
Length of solution path found: 14 edges
Total cost of solution path found: 14.0
189 states expanded.
MAX_OPEN_LENGTH = 127




==================== Problem D




Welcome to A* Search!
Initial State:

[[0, 8, 2]
 [1, 7, 4]
 [3, 6, 5]]
You've got all eight straight. Great!
Solution path:

[[0, 8, 2]
 [1, 7, 4]
 [3, 6, 5]]

[[1, 8, 2]
 [0, 7, 4]
 [3, 6, 5]]

[[1, 8, 2]
 [3, 7, 4]
 [0, 6, 5]]

[[1, 8, 2]
 [3, 7, 4]
 [6, 0, 5]]

[[1, 8, 2]
 [3, 0, 4]
 [6, 7, 5]]

[[1, 0, 2]
 [3, 8, 4]
 [6, 7, 5]]

[[0, 1, 2]
 [3, 8, 4]
 [6, 7, 5]]

[[3, 1, 2]
 [0, 8, 4]
 [6, 7, 5]]

[[3, 1, 2]
 [6, 8, 4]
 [0, 7, 5]]

[[3, 1, 2]
 [6, 8, 4]
 [7, 0, 5]]

[[3, 1, 2]
 [6, 0, 4]
 [7, 8, 5]]

[[3, 1, 2]
 [6, 4, 0]
 [7, 8, 5]]

[[3, 1, 2]
 [6, 4, 5]
 [7, 8, 0]]

[[3, 1, 2]
 [6, 4, 5]
 [7, 0, 8]]

[[3, 1, 2]
 [6, 4, 5]
 [0, 7, 8]]

[[3, 1, 2]
 [0, 4, 5]
 [6, 7, 8]]

[[0, 1, 2]
 [3, 4, 5]
 [6, 7, 8]]
Length of solution path found: 16 edges
Total cost of solution path found: 16.0
589 states expanded.
MAX_OPEN_LENGTH = 368Welcome to A* Search!
Initial State:

[[0, 8, 2]
 [1, 7, 4]
 [3, 6, 5]]
You've got all eight straight. Great!
Solution path:

[[0, 8, 2]
 [1, 7, 4]
 [3, 6, 5]]

[[1, 8, 2]
 [0, 7, 4]
 [3, 6, 5]]

[[1, 8, 2]
 [3, 7, 4]
 [0, 6, 5]]

[[1, 8, 2]
 [3, 7, 4]
 [6, 0, 5]]

[[1, 8, 2]
 [3, 0, 4]
 [6, 7, 5]]

[[1, 0, 2]
 [3, 8, 4]
 [6, 7, 5]]

[[0, 1, 2]
 [3, 8, 4]
 [6, 7, 5]]

[[3, 1, 2]
 [0, 8, 4]
 [6, 7, 5]]

[[3, 1, 2]
 [6, 8, 4]
 [0, 7, 5]]

[[3, 1, 2]
 [6, 8, 4]
 [7, 0, 5]]

[[3, 1, 2]
 [6, 0, 4]
 [7, 8, 5]]

[[3, 1, 2]
 [6, 4, 0]
 [7, 8, 5]]

[[3, 1, 2]
 [6, 4, 5]
 [7, 8, 0]]

[[3, 1, 2]
 [6, 4, 5]
 [7, 0, 8]]

[[3, 1, 2]
 [6, 4, 5]
 [0, 7, 8]]

[[3, 1, 2]
 [0, 4, 5]
 [6, 7, 8]]

[[0, 1, 2]
 [3, 4, 5]
 [6, 7, 8]]
Length of solution path found: 16 edges
Total cost of solution path found: 16.0
589 states expanded.
MAX_OPEN_LENGTH = 368








=======================
======================

A* With Manhattan Heuristic



============Problem A
Initial state as given on the command line: [[3,0,1],[6,4,2],[7,8,5]]

Welcome to A* Search!
Initial State:

[[3, 0, 1]
 [6, 4, 2]
 [7, 8, 5]]
You've got all eight straight. Great!
Solution path: 

[[3, 0, 1]
 [6, 4, 2]
 [7, 8, 5]]

[[3, 1, 0]
 [6, 4, 2]
 [7, 8, 5]]

[[3, 1, 2]
 [6, 4, 0]
 [7, 8, 5]]

[[3, 1, 2]
 [6, 4, 5]
 [7, 8, 0]]

[[3, 1, 2]
 [6, 4, 5]
 [7, 0, 8]]

[[3, 1, 2]
 [6, 4, 5]
 [0, 7, 8]]

[[3, 1, 2]
 [0, 4, 5]
 [6, 7, 8]]

[[0, 1, 2]
 [3, 4, 5]
 [6, 7, 8]]
Length of solution path found: 7 edges
Total cost of solution path found: 7.0
7 states expanded.
MAX_OPEN_LENGTH = 6




======================= Problem B


Initial state as given on the command line: [[3,1,2],[6,8,7],[5,4,0]]

Welcome to A* Search!
Initial State:

[[3, 1, 2]
 [6, 8, 7]
 [5, 4, 0]]
You've got all eight straight. Great!
Solution path: 

[[3, 1, 2]
 [6, 8, 7]
 [5, 4, 0]]

[[3, 1, 2]
 [6, 8, 0]
 [5, 4, 7]]

[[3, 1, 2]
 [6, 0, 8]
 [5, 4, 7]]

[[3, 1, 2]
 [6, 4, 8]
 [5, 0, 7]]

[[3, 1, 2]
 [6, 4, 8]
 [0, 5, 7]]

[[3, 1, 2]
 [0, 4, 8]
 [6, 5, 7]]

[[3, 1, 2]
 [4, 0, 8]
 [6, 5, 7]]

[[3, 1, 2]
 [4, 5, 8]
 [6, 0, 7]]

[[3, 1, 2]
 [4, 5, 8]
 [6, 7, 0]]

[[3, 1, 2]
 [4, 5, 0]
 [6, 7, 8]]

[[3, 1, 2]
 [4, 0, 5]
 [6, 7, 8]]

[[3, 1, 2]
 [0, 4, 5]
 [6, 7, 8]]

[[0, 1, 2]
 [3, 4, 5]
 [6, 7, 8]]
Length of solution path found: 12 edges
Total cost of solution path found: 12.0
33 states expanded.
MAX_OPEN_LENGTH = 25




====================== Problem C


Initial state as given on the command line: [[4,5,0],[1,2,8],[3,7,6]]

Welcome to A* Search!
Initial State:

[[4, 5, 0]
 [1, 2, 8]
 [3, 7, 6]]
You've got all eight straight. Great!
Solution path:

[[4, 5, 0]
 [1, 2, 8]
 [3, 7, 6]]

[[4, 0, 5]
 [1, 2, 8]
 [3, 7, 6]]

[[4, 2, 5]
 [1, 0, 8]
 [3, 7, 6]]

[[4, 2, 5]
 [1, 7, 8]
 [3, 0, 6]]

[[4, 2, 5]
 [1, 7, 8]
 [3, 6, 0]]

[[4, 2, 5]
 [1, 7, 0]
 [3, 6, 8]]

[[4, 2, 0]
 [1, 7, 5]
 [3, 6, 8]]

[[4, 0, 2]
 [1, 7, 5]
 [3, 6, 8]]

[[0, 4, 2]
 [1, 7, 5]
 [3, 6, 8]]

[[1, 4, 2]
 [0, 7, 5]
 [3, 6, 8]]

[[1, 4, 2]
 [3, 7, 5]
 [0, 6, 8]]

[[1, 4, 2]
 [3, 7, 5]
 [6, 0, 8]]

[[1, 4, 2]
 [3, 0, 5]
 [6, 7, 8]]

[[1, 0, 2]
 [3, 4, 5]
 [6, 7, 8]]

[[0, 1, 2]
 [3, 4, 5]
 [6, 7, 8]]
Length of solution path found: 14 edges
Total cost of solution path found: 14.0
56 states expanded.
MAX_OPEN_LENGTH = 39





======================Problem D


Initial state as given on the command line: [[0,8,2],[1,7,4],[3,6,5]]

Welcome to A* Search!
Initial State:

[[0, 8, 2]
 [1, 7, 4]
 [3, 6, 5]]
You've got all eight straight. Great!
Solution path: 

[[0, 8, 2]
 [1, 7, 4]
 [3, 6, 5]]

[[1, 8, 2]
 [0, 7, 4]
 [3, 6, 5]]

[[1, 8, 2]
 [3, 7, 4]
 [0, 6, 5]]

[[1, 8, 2]
 [3, 7, 4]
 [6, 0, 5]]

[[1, 8, 2]
 [3, 0, 4]
 [6, 7, 5]]

[[1, 0, 2]
 [3, 8, 4]
 [6, 7, 5]]

[[0, 1, 2]
 [3, 8, 4]
 [6, 7, 5]]

[[3, 1, 2]
 [0, 8, 4]
 [6, 7, 5]]

[[3, 1, 2]
 [6, 8, 4]
 [0, 7, 5]]

[[3, 1, 2]
 [6, 8, 4]
 [7, 0, 5]]

[[3, 1, 2]
 [6, 0, 4]
 [7, 8, 5]]

[[3, 1, 2]
 [6, 4, 0]
 [7, 8, 5]]

[[3, 1, 2]
 [6, 4, 5]
 [7, 8, 0]]

[[3, 1, 2]
 [6, 4, 5]
 [7, 0, 8]]

[[3, 1, 2]
 [6, 4, 5]
 [0, 7, 8]]

[[3, 1, 2]
 [0, 4, 5]
 [6, 7, 8]]

[[0, 1, 2]
 [3, 4, 5]
 [6, 7, 8]]
Length of solution path found: 16 edges
Total cost of solution path found: 16.0
148 states expanded.
MAX_OPEN_LENGTH = 96

